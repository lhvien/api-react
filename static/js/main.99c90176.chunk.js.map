{"version":3,"sources":["components/Menu/Menu.js","components/Item/Item.js","components/Products/Products.js","pages/Home.js","pages/NotFound.js","constants/config.js","utils/apiCaller.js","reducer/products.js","constants/ActionType.js","actions/index.js","pages/List.js","pages/ActionPage/ActionPage.js","router.js","App.js","serviceWorker.js","reducer/index.js","index.js"],"names":["menus","name","to","exact","MenuLink","label","activeOnlyWhenExact","path","children","active","match","className","Menu","showMenus","result","length","map","menu","index","key","class","href","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","this","Component","Item","onDelete","confirm","console","log","props","onDeleteItem","product","status","statusClass","scope","price","onClick","Products","Home","NotFound","API_URL","callApi","endpoint","method","body","axios","url","config","data","catch","error","initialState","products","state","action","temp","filter","item","push","actFetchProducts","actDeleteProduct","actAddProduct","getProductById","ListPage","onDeleteItemRedux","then","res","fetchAllProducts","aria-hidden","showProducts","connect","dispatch","DeleteProductRequest","ActionPage","isChange","e","target","value","checked","setState","onSave","preventDefault","txtName","txtPrice","cbStatus","history","goBack","newProduct","add","params","getProduct","onSubmit","for","onChange","event","cancelButton","edit","editItem","newproduct","getProductByIdRequest","routes","main","List","App","route","component","Boolean","window","location","hostname","appReducers","combineReducers","store","createStore","__REDUX_DEVTOOLS_EXTENSION__","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.99c90176.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport { Route, Link} from 'react-router-dom';\r\n\r\n\r\n\r\nconst menus = [\r\n    {\r\n        name: 'Trang Chủ',\r\n        to: '/',\r\n        exact: true\r\n    },\r\n    {\r\n        name: 'Quản lý sản phẩm',\r\n        to: '/list-products',\r\n        exact: false\r\n    }\r\n];\r\nconst MenuLink = ({label, to, activeOnlyWhenExact})=>{\r\n    return (\r\n        <Route\r\n            path ={to}\r\n            exact = {activeOnlyWhenExact}\r\n            children = {({match}) =>{\r\n                var active = match ? 'active' : '';\r\n                return (\r\n                    <li className={active}>\r\n                        <Link to={to} >\r\n                            {label}\r\n                        </Link>\r\n                    </li>\r\n                );\r\n            }}\r\n        />\r\n    )\r\n}\r\n\r\nexport default class Menu extends Component {\r\n\r\n    showMenus = (menus) =>{\r\n        var result = null;\r\n        if(menus.length > 0)\r\n        {\r\n            result = menus.map((menu, index) =>{\r\n                return (\r\n                    <MenuLink\r\n                        key = {index}\r\n                        label = {menu.name}\r\n                        to={menu.to}\r\n                        activeOnlyWhenExact = {menu.exact}\r\n                    />\r\n                );\r\n            })\r\n\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                 <nav className=\"navbar navbar-expand-sm navbar-dark bg-primary\">\r\n                    <div class=\"container\">\r\n                    <a className=\"navbar-brand\" href=\"./\">React - Call API</a>\r\n                    <button className=\"navbar-toggler d-lg-none\" type=\"button\" data-toggle=\"collapse\" data-target=\"#collapsibleNavId\" aria-controls=\"collapsibleNavId\" aria-expanded=\"false\" aria-label=\"Toggle navigation\" />\r\n                    <div className=\"collapse navbar-collapse\" id=\"collapsibleNavId\">\r\n                        <ul className=\"navbar-nav mr-auto mt-2 mt-lg-0 menu\">\r\n                        {/* <li className=\"nav-item active\">\r\n                            <a className=\"nav-link\" href=\"#\">Trang Chủ <span className=\"sr-only\">(current)</span></a>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <a className=\"nav-link\" href=\"#\">Sản Phẩm</a>\r\n                        </li> */}\r\n                        {this.showMenus(menus)}\r\n                        </ul>\r\n                    </div>\r\n                    </div>\r\n                </nav>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default class Item extends Component {\r\n\r\n    onDelete = (id) =>{\r\n        \r\n        if(confirm('Chắc xóa hemm ?')){ //eslint-disable-line\r\n            console.log(id);\r\n            this.props.onDeleteItem(id);\r\n        }\r\n    }\r\n    render() {\r\n        var product = this.props.product;\r\n        var { index} = this.props;\r\n        var status = product.status ? \"Còn hàng\" : \"Hết hàng\";\r\n        var statusClass = product.status ? \"text-primary\" : \"text-warning\";\r\n        return (\r\n                 <tr>\r\n                    <td scope=\"row\">{index + 1}</td>\r\n                    <td>{product.id}</td>\r\n                    <td>{product.name}</td>\r\n                    <td>{product.price}</td>\r\n                    <td>\r\n                        <span className={`label ${statusClass}`} > \r\n                        {status}\r\n                        </span>\r\n                    </td>\r\n                    <td>\r\n                    <Link to={`/product/${product.id}/edit`} type=\"button\"  class=\"btn btn-success mr-2\">\r\n                    <i class=\"fa fa-edit \"></i>   Sửa\r\n                    </Link>\r\n                        <button type=\"button\"  class=\"btn btn-warning\" \r\n                        onClick={() => this.onDelete(product.id)} >\r\n                            Xóa <i class=\"fa fa-trash\"></i> \r\n                        </button>\r\n                    </td>\r\n                </tr>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Item from '../Item/Item'\r\n\r\nexport default class Products extends Component {\r\n    static propTypes = {\r\n        prop: PropTypes\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <table class=\"table table-bordered table-hover\">\r\n              <thead>\r\n                <tr>\r\n                  <th>STT</th>\r\n                  <th>Mã SP</th>\r\n                  <th>Tên</th>\r\n                  <th>Giá</th>\r\n                  <th>Trạng thái</th>\r\n                  <th>Hành động</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {this.props.children}\r\n              </tbody>\r\n            </table>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport default class Home extends Component {\r\n    static propTypes = {\r\n        prop: PropTypes\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                 <h1>Trang chu</h1>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport default class NotFound extends Component {\r\n    static propTypes = {\r\n        prop: PropTypes\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                 <h1>Không tìm thấy trang</h1>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","export const API_URL = 'https://5ed712acc2ca2300162c6c1b.mockapi.io/apireact'","import axios from 'axios';\r\nimport * as config from './../constants/config';\r\n\r\nexport default function callApi(endpoint, method = 'GET', body){\r\n    return axios({\r\n        method : method,\r\n        url: ` ${config.API_URL}/${endpoint} ` ,\r\n        data: body\r\n    })\r\n    .catch(function (error) {\r\n        // handle error\r\n        console.log(error);\r\n    });\r\n      \r\n}","\r\nimport * as Types from './../constants/ActionType';\r\nvar initialState = [\r\n    \r\n]\r\nconst products = (state = initialState, action) => {\r\n    var { id } = action;\r\n    switch (action.type){\r\n        case Types.FETCH_PRODUCTS:\r\n            state = action.products;\r\n            return [...state]\r\n        case Types.DELETE_PRODUCT:\r\n            // Sau khi xóa trên api thì\r\n            // xóa luôn trong mảng đang hiển thị \r\n            var temp = state.filter( item => item.id !== id);\r\n            console.log(state);\r\n            return [...temp]\r\n        case Types.ADD_PRODUCT:\r\n            state.push(action.product);\r\n            return [...state]\r\n\r\n        default: return  [...state]\r\n    }\r\n};\r\n\r\nexport default products;","export const FETCH_PRODUCTS = 'FETCH_PRODUCTS';\r\nexport const ADD_PRODUCT = 'ADD_PRODUCT';\r\nexport const UPDATE_PRODUCT = 'UPDATE_PRODUCT';\r\nexport const DELETE_PRODUCT = 'DELETE_PRODUCT';\r\nexport const GET_PRODUCT = 'GET_PRODUCT';","import * as Types from './../constants/ActionType';\r\nimport callApi from './../utils/apiCaller';\r\n\r\nexport const actFetchProductsRequest = () =>{\r\n    return (dispatch) =>{\r\n        return callApi('sanpham', 'GET', null).then(res => {  // !! phải có data thì mới dispatch action đc\r\n            dispatch(actFetchProducts(res.data))\r\n        });\r\n    }\r\n}\r\n\r\n\r\nexport const actFetchProducts = (products) =>{\r\n    return {\r\n        type: Types.FETCH_PRODUCTS,\r\n        products  //payload : products\r\n    }\r\n}\r\nexport const DeleteProductRequest = (id) =>{\r\n    return dispatch =>{\r\n        return callApi(`sanpham/${id}`, 'DELETE', null).then(res =>{\r\n            dispatch(actDeleteProduct(id))\r\n        })\r\n    }\r\n}\r\nexport const actDeleteProduct = (id) =>{\r\n    return {\r\n        type : Types.DELETE_PRODUCT,\r\n        id\r\n    }\r\n}\r\nexport const AddProductRequest = (product) =>{\r\n    return dispatch =>{\r\n        return callApi(`sanpham`, 'POST', \r\n            product\r\n         ).then(res =>{\r\n            dispatch(actAddProduct(res.data))\r\n        })\r\n    }\r\n}\r\nexport const actAddProduct = (product) =>{\r\n    return {\r\n        type: Types.ADD_PRODUCT,\r\n        product\r\n    }\r\n}\r\nexport const getProductByIdRequest = (id) =>{\r\n    return dispatch => {\r\n        return callApi(`sanpham/${id} `, 'GET', null).then(res =>{\r\n            dispatch(getProductById(res.data))\r\n        })\r\n    }\r\n}\r\nexport const getProductById = (product) =>{\r\n    return {\r\n        type: Types.GET_PRODUCT,\r\n        product\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport Products from '../components/Products/Products'\r\nimport Item from '../components/Item/Item'\r\nimport {connect} from 'react-redux';\r\nimport axios from 'axios';\r\nimport callApi from './../utils/apiCaller';\r\nimport { Link } from 'react-router-dom';\r\nimport products from '../reducer/products';\r\nimport { actFetchProductsRequest,DeleteProductRequest } from './../actions/index';\r\n class ListPage extends Component {\r\n\r\n\r\n\r\n    componentDidMount() {\r\n\r\n        callApi('sanpham', 'GET', null).then(res => {\r\n            // this.setState({\r\n            //     products : res.data\r\n            // });\r\n\r\n            // lấy data đưa lên store, rồi mới lấy data về xài\r\n            this.props.fetchAllProducts();\r\n        });\r\n    }\r\n\r\n\r\n    onDelete = (id) =>{  \r\n\r\n        this.props.onDeleteItemRedux(id);\r\n    }\r\n    \r\n\r\n    showProducts(products)\r\n        {\r\n            var result = null;\r\n            if(products.length > 0){\r\n                result = products.map((product, index)=>{\r\n                    return(\r\n                        <Item\r\n                            key = {index}\r\n                            product = {product}\r\n                            index= {index}\r\n                            onDeleteItem = {this.onDelete}\r\n                        />\r\n                    );\r\n                });\r\n            }\r\n            return result;\r\n        }\r\n    render() {\r\n      \r\n        var products = this.props.products;\r\n        \r\n        //console.log(this.props.products);\r\n        \r\n        return (\r\n            <div>\r\n             <Link to=\"/product/add\"  class=\"btn btn-info mt-2 mb-2\" ><i class=\"fa fa-plus\" aria-hidden=\"true\"></i> Thêm sản phẩm\r\n            </Link>\r\n                <Products>\r\n                    {this.showProducts(products)}\r\n                </Products>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return { \r\n        products: state.products     // lấy từ store\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch, props) => {\r\n    return {\r\n        fetchAllProducts: () => {  // lưu lên store\r\n            dispatch(actFetchProductsRequest());   \r\n        },\r\n        onDeleteItemRedux : (id) =>{\r\n            dispatch(DeleteProductRequest(id));\r\n        }\r\n    }\r\n}\r\nexport default connect(mapStateToProps,mapDispatchToProps)(ListPage)\r\n","import React, { Component } from 'react'\r\nimport callApi from './../../utils/apiCaller'\r\nimport { Link } from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\nimport { AddProductRequest, getProductByIdRequest } from '../../actions';\r\n\r\n class ActionPage extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            id: '',\r\n            txtName:'',\r\n            txtPrice:'',\r\n            cbStatus: ''\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        var {match } = this.props;\r\n        if(match){\r\n            var id = match.params.id;\r\n            console.log(id);\r\n            this.props.getProduct(id);\r\n    \r\n            \r\n            \r\n            callApi(`sanpham/${id} `, 'GET', null).then(res =>{\r\n                var data = res.data;\r\n                console.log(res.data);\r\n                this.setState({\r\n                    id: data.id,\r\n                    txtName:data.name,\r\n                    txtPrice:data.price,\r\n                    cbStatus: data.status\r\n                });\r\n            });\r\n        }\r\n    }\r\n    \r\n\r\n    isChange = (e) =>{\r\n        var target = e.target;\r\n        var name = target.name;\r\n        var value = target.type === 'checkbox' ? target.checked : target.value;\r\n        this.setState({\r\n            [name]:value\r\n        })\r\n    }\r\n    cancelButton(){\r\n        var {history} = this.props;\r\n        history.push('/list-products')\r\n    }\r\n    onSave = (e) =>{\r\n        e.preventDefault();\r\n        var {id, txtName, txtPrice, cbStatus} = this.state\r\n        var {history} = this.props;\r\n\r\n        if(id) { //update\r\n            console.log('this is update....');\r\n            callApi(`sanpham/${id}`, 'PUT',{\r\n                name: txtName,\r\n                price:txtPrice,\r\n                status:cbStatus\r\n            }).then(res =>{\r\n                history.goBack();\r\n            });\r\n            \r\n        }else{  //add case\r\n            var newProduct ={};\r\n            newProduct.name= txtName;\r\n            newProduct.price=txtPrice;\r\n            newProduct.status=cbStatus;\r\n\r\n            this.props.add(newProduct);\r\n            history.goBack();\r\n            // callApi('sanpham', 'POST',{\r\n            //     name: txtName,\r\n            //     price:txtPrice,\r\n            //     status:cbStatus\r\n            // }).then(res =>{\r\n            //     console.log(res);  \r\n            //     history.goBack();\r\n            //     //history.push('/list-products')  ;       \r\n            // });\r\n\r\n        }  \r\n    }\r\n\r\n    render() {\r\n        var {txtName, txtPrice, cbStatus} = this.state;\r\n        return (\r\n\r\n            <div className=\"col-sm-10 \">\r\n                <div class=\"offset-sm-2 mt-5 card border-primary\">\r\n                    <div class=\"card-body\">\r\n                            <form onSubmit={this.onSave}> \r\n                            <div class=\"form-group\">\r\n                                <label for=\"\">Tên sản phẩm</label>\r\n                                <input \r\n                                    value={txtName}\r\n                                    onChange={ (event) => this.isChange(event)}\r\n\r\n                                    type=\"text\" name=\"txtName\" id=\"\" class=\"form-control\" \r\n                                />\r\n                            </div>\r\n                            <div class=\"form-group\">\r\n                                <label for=\"\">Giá</label>\r\n                                <input \r\n                                value={txtPrice}\r\n                                onChange={ (event) => this.isChange(event)}\r\n                                type=\"number\" name=\"txtPrice\" id=\"\" class=\"form-control\" />\r\n                            </div>\r\n                            <label for=\"\">Trạng thái</label>\r\n                            <div class=\"checkbox\" >\r\n                                <label >\r\n                                    <input \r\n                                    value={cbStatus}\r\n                                    checked={cbStatus}\r\n                                    onChange={ (event) => this.isChange(event)}\r\n                                    name=\"cbStatus\" type=\"checkbox\" />\r\n                                    Còn hàng\r\n                                </label>    \r\n                            </div>\r\n\r\n                            <button onClick={ () => this.cancelButton() } className=\" mr-2 btn btn-danger\" > Hủy\r\n                            </button>\r\n\r\n                            <button type=\"submit\" class=\"btn btn-primary\">\r\n                                Lưu lại <span class=\"badge badge-primary\"></span>\r\n                            </button>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = state => {\r\n    return { \r\n        products: state.products,     // lấy từ store\r\n        edit : state.editItem\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch, props) => {\r\n    return {\r\n        add: (newproduct) => {  // lưu lên store\r\n            dispatch(AddProductRequest(newproduct));\r\n        },\r\n        getProduct :(id) =>{\r\n            dispatch(getProductByIdRequest(id));\r\n        }\r\n        \r\n    }\r\n}\r\nexport default connect(mapStateToProps,mapDispatchToProps)(ActionPage)\r\n","import React from 'react';\r\nimport Home from './pages/Home';\r\nimport NotFound from './pages/NotFound';\r\nimport ListPage from './pages/List';\r\nimport ActionPage from './pages/ActionPage/ActionPage';\r\n\r\nconst routes = [\r\n    {\r\n        path :'/',\r\n        exact: true,\r\n        main: () => <Home/>\r\n    },\r\n    {\r\n        path :'/product/add',\r\n        exact: false,\r\n        main: ({history}) => <ActionPage history={history} />\r\n    },\r\n    {\r\n        path :'/product/:id/edit',\r\n        exact: false,\r\n        main: ({match,history}) => <ActionPage match={match} history={history}/>\r\n    },\r\n    {\r\n        path :'/list-products',\r\n        exact: false,\r\n        main: () => <ListPage/>\r\n    },\r\n    {\r\n        path :'',\r\n        exact: false,\r\n        main: () => <NotFound/>\r\n    }\r\n];\r\n\r\nexport default routes;","import React,{ Component } from 'react';\nimport './App.css';\nimport Menu from './components/Menu/Menu';\nimport Products from './components/Products/Products';\nimport routes from './router';\nimport { Switch, Route, BrowserRouter as Router } from 'react-router-dom';\nclass App extends Component  {\n\n  showMenus = (routes) =>{\n    var result = null;\n    if(routes.length > 0){\n      result = routes.map((route, index) =>{\n       return( \n        <Route\n            key = {index}\n            path = {route.path}\n            exact = {route.exact}\n            component = {route.main}\n          />\n        );\n      });\n    }\n    return <Switch> {result}</Switch>;\n  }\n  render(){\n  return (\n    <Router>\n        <div >\n      <Menu/>\n\n      <div class=\"container\">\n        <div class=\"row\">\n          <div className=\"col-sm-12 col-xs-12\" >\n            {/* <button type=\"button\"  class=\"btn btn-info mt-2 mb-2\" >Thêm sản phẩm\n            </button>\n            <Products/> */}\n            {this.showMenus(routes)}\n          </div>\n          \n        </div>\n      </div>\n\n    </div>\n    </Router>\n  );\n          }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { combineReducers } from 'redux';\r\nimport products from './products';\r\nconst appReducers = combineReducers ({\r\n    products,\r\n});\r\n\r\nexport default appReducers;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, applyMiddleware } from 'redux';\nimport appReducers from './reducer/index';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\n\nconst store = createStore (\n  appReducers,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__(),\n  applyMiddleware(thunk)\n)\n\nReactDOM.render(\n  <Provider store={store}>\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}